---
version: '3.7'

services:

    prometheus:
      image: prom/prometheus:v2.16.0
      container_name: monitoring_prometheus
      restart: unless-stopped
      volumes:
        - ./data/prometheus/config:/etc/prometheus/
        - ./data/prometheus/data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - 9091:9090
      links:
        - cadvisor:monitoring_cadvisor
        - node-exporter:node-monitoring_node_exporter

    node-exporter:
      image: prom/node-exporter:v0.18.1
      container_name: monitoring_node_exporter
      restart: unless-stopped
      ports:
        - 9100:9100

  #   alertmanager:
  #     image: prom/alertmanager:latest
  #     ports:
  #       - 9093:9093
  #     volumes:
  #       - ./data/alertmanager/:/etc/alertmanager/
  #     networks:
  #       - back-tier
  #     restart: always
  #     command:
  #       - '--config.file=/etc/alertmanager/config.yml'
  #       - '--storage.path=/alertmanager'
  # #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

    cadvisor:
      image: google/cadvisor:v0.32.0
      container_name: monitoring_cadvisor
      restart: unless-stopped
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
      ports:
        - 7777:8080
      #links: 
      #  - elasticsearch
      #command: -storage_driver="elasticsearch" -alsologtostderr=true -storage_driver_es_host="http://monitoring_elasticsearch:9200"
  
    grafana:
      image: grafana/grafana:6.7.1
      user: "1000"
      container_name: monitoring_grafana
      restart: unless-stopped
      links:
        - prometheus:monitoring_prometheus
      volumes:
        - ./data/grafana/data:/var/lib/grafana
        - ./data/grafana/provisioning/:/etc/grafana/provisioning/
        #- ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
        #- ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml. 1860
        #- ./grafana/grafana.ini:/etc/grafana/grafana.ini
        #- ./grafana/dashboards:/var/lib/grafana/dashboards
      environment:
         - GF_SECURITY_ADMIN_USER=admin
         - GF_SECURITY_ADMIN_PASSWORD=admin
         - GF_USERS_ALLOW_SIGN_UP=false
        #- GF_USERS_ALLOW_SIGN_UP=true
        #- GF_SECURITY_ADMIN_PASSWORD="secure_pass"
        #- GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      depends_on:
        - prometheus
      ports:
        - '3000:3000'
 #       - GF_SERVER_DOMAIN=myrul.com
 #       - GF_SMTP_ENABLED=true
 #       - GF_SMTP_HOST=smtp.gmail.com:587
 #       - GF_SMTP_USER=myadrress@gmail.com
 #       - GF_SMTP_PASSWORD=mypassword
 #       - GF_SMTP_FROM_ADDRESS=guillaume.denis@finastra.com

#  logstash:
#    image: docker.elastic.co/logstash/logstash:${TAG}
#    container_name: logstash
#    secrets:
#      - source: logstash.conf
#        target: /usr/share/logstash/pipeline/logstash.conf
#      - source: logstash.yml
#        target: /usr/share/logstash/config/logstash.yml
#      - source: logstash.keystore
#        target: /usr/share/logstash/config/logstash.keystore
#      - source: ca.crt
#        target: /usr/share/logstash/config/certs/ca/ca.crt
#    depends_on: ['elasticsearch']
#    healthcheck:
#      test: bin/logstash -t
#      interval: 60s
#      timeout: 50s
#      retries: 5

#  fluentd:
#    build: ./fluentd
#    volumes:
#      - ./fluentd/conf:/fluentd/etc
#    links:
#      - "elasticsearch"
#    ports:
#      - 24224:24224
#      - 24224:24224/udp

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1    
      container_name: monitoring_elasticsearch      
      #restart: unless-stopped      
      deploy:
        resources:
          limits:
            memory: 3g
          reservations:
            memory: 512m      
      environment:
        - xpack.security.enabled=false      
        - discovery.type=single-node
        #- http.host=0.0.0.0
        #- transport.host=127.0.0.1
        #- bootstrap.memory_lock=true
        #- "ES_JAVA_OPTS=-Xms${ES_JVM_HEAP} -Xmx${ES_JVM_HEAP}"      
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536        
      cap_add:
        - IPC_LOCK          
      volumes:
        #- ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        - esdata:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
        - 9300:9300

    kibana:
      container_name: monitoring_kibana
      image: docker.elastic.co/kibana/kibana:7.4.0
      environment:
        - ELASTICSEARCH_HOSTS=http://monitoring_elasticsearch:9200
      ports:
        - 5601:5601
      depends_on:
        - elasticsearch
      
volumes:
  esdata:
    driver: local
    
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.59.0/24 # bypass openvpn
