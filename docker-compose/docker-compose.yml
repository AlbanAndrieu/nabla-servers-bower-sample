---
version: '3.7'

services:
  web:
#    image: ${DOCKER_REGISTRY}/${DOCKER_ORGANISATION}/${DOCKER_RUNTIME_NAME:-bower-fr-integration-test}:${DOCKER_TAG:-latest}
    image: registry.misys.global.ad/fusion-risk/bower-fr-integration-test:${DOCKER_TAG:-latest}
#    container_name: sample
    hostname: sample
    domainname: sample.fr
    restart: on-failure:5
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    #command: sleep infinity
    #read_only: true
    tmpfs:
      - /run
      - /tmp:rw,exec,nosuid,size=2g
      - /home/sample/data/tmp:rw,exec,nosuid,size=2g
      - /home/sample/data/work:rw,exec,nosuid,size=2g
      - /home/sample/data/profiles:rw,exec,nosuid,size=2g
      - /home/sample/data/executions:rw,exec,nosuid,size=2g
      - /home/sample/data/sessions:rw,exec,nosuid,size=2g
      - /home/sample/webapps:rw,exec,nosuid,size=2g
    #ports:
    # - "1099:1099" #jmx remote
    # - "9090:8080" #http
    # - "9443:9443" #https
    # - "2924:2924" #eclipse
    links:
      - db
      - cache

  selenium-hub:
    image: selenium/hub:3.12.0-cobalt
    container_name: selenium-hub
    ports:
      - "4444:4444"

  chrome:
    image: selenium/node-chrome:3.12.0-cobalt
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444

  firefox:
    image: selenium/node-firefox:3.12.0-cobalt
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444

#  artifactory:
#    #image: docker.bintray.io/jfrog/artifactory-oss:6.1.0
#    image: docker.bintray.io/jfrog/artifactory-cpp-ce
#    container_name: artifactory
#    ports:
#     - 80:8081
#    volumes:
#     - /workspace/data/artifactory:/var/opt/jfrog/artifactory
##    Add extra Java options by uncommenting the following lines
##    environment:
##     - EXTRA_JAVA_OPTIONS=-Xmx4g
#    restart: always
#    ulimits:
#      nproc: 65535
#      nofile:
#        soft: 32000
#        hard: 40000

  db:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
    volumes:
      - "./conf.d:/etc/mysql/conf.d:ro"

  cache:
    image: redis:latest

#  logstash:
#    image: docker.elastic.co/logstash/logstash:${TAG}
#    container_name: logstash
#    secrets:
#      - source: logstash.conf
#        target: /usr/share/logstash/pipeline/logstash.conf
#      - source: logstash.yml
#        target: /usr/share/logstash/config/logstash.yml
#      - source: logstash.keystore
#        target: /usr/share/logstash/config/logstash.keystore
#      - source: ca.crt
#        target: /usr/share/logstash/config/certs/ca/ca.crt
#    depends_on: ['elasticsearch']
#    healthcheck:
#      test: bin/logstash -t
#      interval: 60s
#      timeout: 50s
#      retries: 5

# use docker volume to persist test data outside of a container.
#volumes:
#  test_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.57.0/24 # bypass openvpn

secrets:
  ca.crt:
    file: ./config/ssl/ca/ca.crt
  logstash.yml:
    file: ./config/logstash/logstash.yml
  logstash.keystore:
    file: ./config/logstash/logstash.keystore
  logstash.conf:
    file: ./config/logstash/pipeline/logstash.conf
