sonar.projectName=nabla:nabla-servers-bower-sample
sonar.projectKey=nabla:nabla-servers-bower-sample
#sonar.projectVersion=1.0.0

sonar.host.url=https://nabla/
sonar.login=TODO

sonar.sourceEncoding=UTF-8
#sonar.language=java,grvy,js,c++,py,c,xml

sonar.java.binaries=target/classes
sonar.java.libraries=target/dependency/*.jar
#sonar.projectBaseDir=./
sonar.jacoco.reportPaths=./target/jacoco.exec,./target/jacoco-it.exec

sonar.java.source=1.8
sonar.java.target=1.8

#sonar.inclusions=${SONAR_DIFF}

#, **/test/**
sonar.exclusions=.repository, **/target/**, .node_cache/**, cache/**, .tmp/** .node_tmp/**, .git/**, **/.grunt/**, **/.bower/**, .mvnw/**, bower_components/**, **/node_modules/**, **/npm/**, **/node/**, **/lib/**, **/libs/**, **/docs/**, hooks/**, **/help/**, **/Sample/**, **/vendors/**, dist/**, **/build/**, site/**, **/fonts/**, **/images/**, coverage/**, .mvn/**, ansible/**, screenshots/**, bm/**, test/**, Dockerfile

# List of the module identifiers
# mvn -q --also-make exec:exec -Dexec.executable="pwd"
#sonar.modules=module0,module1
sonar.modules=module1

module0.sonar.projectName=main
module0.sonar.projectBaseDir=./
module0.sonar.sources=./
#module0.sonar.tests=
module0.sonar.binaries=target
#module0.sonar.libraries=install/lib,install/kles
#module0.sonar.language=C++
module0.sonar.exclusions=**/*.java, **/*.groovy, .repository, **/target/**, .node_cache/**, cache/**, .tmp/** .node_tmp/**, .git/**, **/.grunt/**, **/.bower/**, .mvnw/**, bower_components/**, **/node_modules/**, **/npm/**, **/node/**, **/lib/**, **/libs/**, **/docs/**, hooks/**, **/help/**, **/Sample/**, **/vendors/**, dist/**, **/build/**, site/**, **/fonts/**, **/images/**, coverage/**, .mvn/**, ansible/**, screenshots/**, bm/**, test/**, Dockerfile

module1.sonar.projectName=java
module1.sonar.projectBaseDir=./
#src/main/scala
module1.sonar.sources=src/main/java,src/main/groovy
#src/test/scala
#module1.sonar.tests=src/test/java,src/test/groovy
module1.sonar.java.binaries=target/classes
#module1.sonar.java.libraries=./target/**/*.jar
module1.sonar.jacoco.reportPaths=target/jacoco.exec,target/jacoco-it.exec
#TODO below might be removed if you want to scan javascript and other css. html
#module1.sonar.language=java
module1.sonar.exclusions=.repository, **/target/**, .node_cache/**, cache/**, .tmp/** .node_tmp/**, .git/**, **/.grunt/**, **/.bower/**, .mvnw/**, bower_components/**, **/node_modules/**, **/npm/**, **/node/**, **/lib/**, **/libs/**, **/docs/**, hooks/**, **/help/**, **/Sample/**, **/vendors/**, dist/**, **/build/**, site/**, **/fonts/**, **/images/**, coverage/**, .mvn/**, ansible/**, screenshots/**, bm/**, test/**, Dockerfile, , **/_build/**

checkmarx.server.url=https://checkmarx
checkmarx.server.username=jenkins
checkmarx.server.password=microsoft
checkmarx.server.project_name=nabla-servers-bower-sample

#sonar.verbose=true
#sonar.cfamily.build-wrapper-output.bypass=true
# The build-wrapper output dir
sonar.cfamily.build-wrapper-output=bw-outputs
#build-wrapper --out-dir bw-outputs scons

sonar.cxx.compiler.parser=GCC
sonar.cxx.compiler.reportPath=build.log
sonar.cxx.compiler.charset=UTF-8
#sonar.cxx.compiler.regex=^(.):([0-9]+):[0-9]+: warning: (.)[(.*)]$
sonar.cxx.compiler.regex=^(.*):(\\d+): warning: (.*)\\[(.*)\\]$

sonar.cxx.includeDirectories=include,/usr/include
#sonar.cxx.defines=NDEBUG "" \n\
#linux ""       \n\
#DEBUG 1

sonar.cxx.cppcheck.reportPath=cppcheck-reports/cppcheck-result-SAMPLE.xml
sonar.cxx.rats.reportPath=rats-reports/rats-result-SAMPLE.xml
#sonar.cxx.valgrind.reportPath
#sonar.cxx.vera.reportPath
#sonar.cxx.drmemory.reportPath
#sonar.cxx.xunit.reportPath
#sonar.cxx.xunit.xsltURL
#sonar.cxx.vstest.reportsPaths
#sonar.cxx.nunit.reportsPaths
#sonar.cxx.xunit.reportsPaths
#sonar.cxx.pclint.reportPath
#sonar.cxx.other.reportPath
#sonar.cxx.coverage.reportPath
#sonar.cxx.coverage.itReportPath
#sonar.cxx.coverage.overallReportPath

#Sonar community plugins
#sonar.cxx.suffixes.source=
#sonar.cxx.suffixes.headers

#sonar.lang.patterns.c++=**/*.cxx,**/*.cpp,**/*.cc,**/*.hxx,**/*.hpp,**/*.hh
sonar.lang.patterns.c++=**/*cxx.TODO
sonar.lang.patterns.cpp=**/*cpp.TODO
sonar.lang.patterns.c=**/*.c,**/*.h
#sonar.lang.patterns.c=**/*c.TODO
sonar.lang.patterns.objectivec=**/*.m
sonar.lang.patterns.objc=**/*.m
#Sonar cfamily plugins
sonar.c.file.suffixes=.c,.h
sonar.cpp.file.suffixes=.cc,.cpp,.cxx,.c++,.hh,.hpp,.hxx,.h++,.ipp
sonar.objc.file.suffixes=.m

# Xcode project configuration (.xcodeproj or .xcworkspace)
# -> If you have a project: configure only sonar.objectivec.project
# -> If you have a workspace: configure sonar.objectivec.workspace and sonar.objectivec.project
# and use the later to specify which project(s) to include in the analysis (comma separated list)
sonar.objectivec.project=myApplication.xcodeproj
# sonar.objectivec.workspace=myApplication.xcworkspace

# Scheme to build your application
sonar.objectivec.appScheme=myApplication
# Scheme to build and run your tests (comment following line of you don't have any tests)
sonar.objectivec.testScheme=myApplicationTests

# Cobertura report generated by run-sonar.sh is stored in sonar-reports/coverage.xml
# Change it only if you generate the file on your own
# sonar.objectivec.coverage.reportPattern=sonar-reports/coverage*.xml

# OCLint report generated by run-sonar.sh is stored in sonar-reports/oclint.xml
# Change it only if you generate the file on your own
# sonar.objectivec.oclint.report=sonar-reports/oclint.xml

# Paths to exclude from coverage report (tests, 3rd party libraries etc.)
# sonar.objectivec.excludedPathsFromCoverage=pattern1,pattern2
sonar.objectivec.excludedPathsFromCoverage=.*Tests.*

sonar.dependencyCheck.reportPath=${WORKSPACE}/target/dependency-check-report.xml
#sonar.dependencyCheck.htmlReportPath=${WORKSPACE}/target/dependency-check-report.html
sonar.dependencyCheck.severity.blocker=9.0
sonar.dependencyCheck.severity.critical=7.0
sonar.dependencyCheck.severity.major=4.0
sonar.dependencyCheck.severity.minor=0.0
sonar.dependencyCheck.summarize=true
