---
# To execute this docker-compose yml file use docker-compose -f <file_name> up
# Add the "-d" flag at the end for deattached execution
version: '3'
services:
  #sample:
  #  image: sample/test:latest
  #  container_name: sample
  #  hostname: sample
  #  domainname: sample.fr
  #  cpu_shares: 73
  #  cpu_quota: 50000
  #  cpuset: 0-2
  #  mem_limit: 1024m
  #  restart: on-failure:5
  #  ulimits:
  #    nproc: 65535
  #    nofile:
  #      soft: 20000
  #      hard: 40000
  #  #command: sleep infinity
  #  #read_only: true
  #  tmpfs:
  #    - /run
  #    - /tmp:rw,exec,nosuid,size=2g
  #    - /home/sample/data/tmp:rw,exec,nosuid,size=2g
  #    - /home/sample/data/work:rw,exec,nosuid,size=2g
  #    - /home/sample/data/profiles:rw,exec,nosuid,size=2g
  #    - /home/sample/data/executions:rw,exec,nosuid,size=2g
  #    - /home/sample/data/sessions:rw,exec,nosuid,size=2g
  #    - /home/sample/webapps:rw,exec,nosuid,size=2g
  #  ports:
  #   - "1099:1099" #jmx remote
  #   - "9090:9090" #http
  #   - "9443:9443" #https
  #   - "2924:2924" #eclipse
  #  #depends_on:
  #  # - other
  selenium-hub:
    image: selenium/hub:3.12.0-cobalt
    container_name: selenium-hub
    ports:
      - 4444:4444
  chrome:
    image: selenium/node-chrome:3.12.0-cobalt
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
  firefox:
    image: selenium/node-firefox:3.12.0-cobalt
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
  artifactory:
    #image: docker.bintray.io/jfrog/artifactory-oss:6.1.0
    image: docker.bintray.io/jfrog/artifactory-cpp-ce
    container_name: artifactory
    ports:
      - 80:8081
    volumes:
      - /workspace/data/artifactory:/var/opt/jfrog/artifactory
    #    Add extra Java options by uncommenting the following lines
    #    environment:
    #     - EXTRA_JAVA_OPTIONS=-Xmx4g
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
  mysql:
    image: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
    volumes:
      - ./conf.d:/etc/mysql/conf.d:ro
  elasticsearch:
    image: elasticsearch:2.3.3
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    ## uncomment and adjust the path before the colon to some local directory where the data should be stored at
    ## NOTE: if you don't do that, the data will not be persistent!
    #volumes:
    # - /workspace/data/docker/es-stagemonitor:/usr/share/elasticsearch/data
    #environment:
    # - ES_HEAP_SIZE=6g # adjust heap size, should be half of your nodes RAM (max 30g)
    command:
      elasticsearch --cluster.name monitoring-cluster --index.number_of_replicas 0 --network.bind_host _non_loopback:ipv4_ --node.name es-monitoring-01 --http.cors.enabled
      true --http.cors.allow-origin *
      ##  only needed if you want to cluster elasticsearch across multiple hosts
      #--network.publish_host <ip of docker host>
      #--discovery.zen.ping.unicast.hosts <ip of other ES hosts>
      ##  Note:
      #   set 'node.box_type hot' for your beefy nodes with SSDs which hold the new indices and 'node.box_type cold' for historical nodes (see https://github.com/stagemonitor/stagemonitor/wiki/Elasticsearch#hot-cold-architecture)
      #   increase 'index.number_of_replicas' if you want backups (needs more disk space)
      #   don't forget to change the 'node.name' if you want multiple instances
  #log_driver: "json-file"
  #log_opt: # log rotation
  #  max-size: "10m"
  #  max-file: "20"
  kibana:
    image: kibana:4.5.1
    container_name: kibana
    ports:
      - 5601:5601
    links:
      - elasticsearch:elasticsearch
  #log_driver: "json-file"
  #log_opt: # log rotation
  #  max-size: "10m"
  #  max-file: "20"
  grafana:
    image: grafana/grafana:3.0.4
    ports:
      - 3000:3000
    links:
      - elasticsearch:elasticsearch
    ## uncomment and adjust the path before the colon to some local directory where the data should be stored at
    ## NOTE: if you don't do that, the data will not be persistent!
    #volumes:
    # - /workspace/data/docker/grafana/lib:/var/lib/grafana
    # - /workspace/data/docker/grafana/log:/var/log/grafana
    #log_driver: "json-file"
    #log_opt: # log rotation
    #  max-size: "10m"
    #  max-file: "20"
