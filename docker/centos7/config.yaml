# vi: ft=yaml.ansible.jinja2
---
schemaVersion: 2.0.0

fileExistenceTests:
  - name: jenkins directory
    path: /home/jenkins
    shouldExist: true
    permissions: drwx------
    uid: 1100

  #  - name: "sonar-build-wrapper"
  #    path: "/usr/local/sonar-build-wrapper/build-wrapper-linux-x86-64"
  #    shouldExist: true
  #    permissions: "-rwxr-xr-x"
  #
  #  - name: "sonar-scanner"
  #    path: "/usr/local/sonar-runner/bin/sonar-scanner"
  #    shouldExist: true
  #    permissions: "-rwxr-xr-x"

  # Should not exist as it is a runtime image
  - name: maven
    path: /usr/bin/mvn
    shouldExist: false

commandTests:
  - name: check jenkins user
    command: whoami
    expectedOutput: [jenkins]
  - name: check jenkins uid/gid used for config generation
    command: id
    expectedOutput: [uid=1100.jenkins. gid=1101.docker. .*]
  - name: check PATH
    command: echo
    args: ['${PATH}']
    expectedOutput: ['/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin']
  #- name:  "yum update"
  #  command: "yum"
  #  args: ["update", "-y"]

  - name: check openjdk 1.8.0
    command: ${JAVA_HOME}/bin/java
    args: [-version]
    expectedError: [openjdk version \"1\.8\..*\".*]
  - name: check python 2.7.15+
    command: python
    args: [--version]
    expectedError: [Python 2.7.*]
  # - name: "check pip 8.1.2"
  #   command: "pip"
  #   args: ["--version"]
  #   expectedOutput: ["pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.7)*"]

  - name: check python 3
    command: python3
    args: [--version]
    expectedOutput: [Python 3.6.*]
  #- name: "check python 3.5.7"
  #   command: "python3.5"
  #   args: ["--version"]
  #   expectedOutput: ['Python 3.5.*']

  - name: check python 3.6.8
    command: python3.6
    args: [--version]
    expectedOutput: [Python 3.6.*]
  - name: check pip 20.2.3
    command: pip3
    args: [--version]
    expectedOutput: [pip 20.2.* from /usr/local/lib/python3.6/site-packages/pip (python 3.6)*]
  - name: check docker 20.10.0
    command: docker
    args: [--version]
    expectedOutput: [Docker version 20.10.*]

metadataTest:
  env:
    - key: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  #  labels:
  #    - key: 'com.example.vendor'
  #      value: 'ACME Incorporated'
  exposedPorts: ["8080"]
  #  exposedPorts: ["8080", "2345"]
  volumes: []
  #  volumes: ["/test"]
  entrypoint: ['java', '-Djava.security.egd=file:/dev/./urandom', '-Djetty.base=/var/lib/jetty', '-jar', '/home/jenkins/jetty-runner.jar']
  cmd: ['/home/jenkins/test.war']
  workdir: /home/jenkins
