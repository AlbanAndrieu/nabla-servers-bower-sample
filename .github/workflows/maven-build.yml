---
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [master, main]
    paths-ignore:
      - "**.md"
  schedule:
    - cron: 0 6 * * 3
  pull_request:
    branches: [master, main]
    paths-ignore:
      - "**.md"

env:
  REPO: ${{ github.event.repository.name }}
  OWNER: ${{ github.event.repository.owner.login }}
  ISSUE_NUMBER: ${{ github.event.issue.number }}
  HEAD_OWNER: ${{ github.event.pull_request.head.repo.owner.login }}

jobs:
  build-maven:
    #if: github.actor!= 'dependabot-preview[bot]'   # ignore the pull request which comes from user depbot.
    name: Build Maven
    runs-on: ubuntu-18.04
    # See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    #runs-on: ubuntu-latest
    #container:
    #  image: nabla/ansible-jenkins-slave-docker:1.0.16
    steps:
      #- name: Install maven
      #  run: sudo apt -y update && sudo apt -y install maven
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 00

      - name: Set up JDK 11
        uses: actions/setup-java@v3.4.1
        with:
          java-version: "11"
          distribution: adopt

      # Runs a single command using the runners shell
      - name: Install Node.Js
        uses: actions/setup-node@v3.4.1
        with:
          #node-version-file: '.nvmrc'
          node-version: "14.19" # with npm 8.10.0
          #check-latest: true
          #cache: 'npm'
          #cache-dependency-path: '**/package-lock.json'
          #registry-url: 'https://registry.npmjs.org'

      - name: Install npm package (bower)
        #run: sudo apt -y update && sudo apt -y install bower
        run: |
          npm install -g bower@1.8.8 grunt@1.0.4 grunt-cli@1.3.2 webdriver-manager@12.1.7 yarn@1.19.1 yo@3.1.1 bower-nexus3-resolver@1.0.2
          npm install -g markdown-toc@latest secretlint@latest

      #- name: Install Yarn
      #  uses: borales/actions-yarn@v2.0.0
      #  with:
      #    cmd: install # will run `yarn install` command

      #- name: Build React App
      #  run: yarn build

      - name: ruby version
        run: ruby -v

      - name: Install compass
        #run: sudo apt-get install -y ruby-compass
        #run: sudo apt-get install -y compass-blueprint-plugin
        run: sudo gem install sass compass

      - name: Build with Maven
        run: ./mvnw -B package --file pom.xml

  build-docker:
    if: github.actor != 'dependabot[bot]' && github.actor!= 'dependabot-preview[bot]'   # ignore the pull request which comes from user dependabot.
    name: Build Docker
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      # https://github.com/dependabot/dependabot-core/issues/3253
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: true

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Login to ECR
      #  uses: docker/login-action@v2
      #  with:
      #    registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com
      #    username: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #  with:
      #    images: nabla/nabla-servers-bower-sample:latest

      - name: Build and push debug
        run: echo "docker push nabla/nabla-servers-bower-sample:latest,${{ github.repository }}:${{ github.sha }}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          #tags: nabla/nabla-servers-bower-sample:latest,nabla/nabla-servers-bower-sample:${{ github.sha }}
          tags: |
            nabla/nabla-servers-bower-sample:latest
          build-args: |
            TEST=TODO
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            GIT_SHA=${GITHUB_SHA::8}
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nabla/nabla-servers-bower-sample:latest
          format: template
          template: "@/contrib/sarif.tpl"
          output: trivy-results.sarif
          # format: 'table'
          # exit-code: '1'
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif

      - name: Print the GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
